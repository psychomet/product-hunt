version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=vendure
      - POSTGRES_USER=vendure
      - POSTGRES_PASSWORD=vendure
      # Add additional databases here, comma-separated
      - POSTGRES_ADDITIONAL_DATABASES=my_second_db,strapi_db
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - bigi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vendure"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Vendure Server
  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    ports:
      - '3000:3000'
      - '3002:3002' # Admin UI port
    volumes:
      - vendure-data:/app/vendure
      - ./.env:/app/.env
      - email-data:/app/static/email
    environment:
      - APP_ENV=prod
      - PORT=3000
      - SUPERADMIN_USERNAME=${SUPERADMIN_USERNAME:-superadmin}
      - SUPERADMIN_PASSWORD=${SUPERADMIN_PASSWORD:-superadmin}
      - COOKIE_SECRET=${COOKIE_SECRET:-cookie-secret-key}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=vendure
      - DB_USERNAME=vendure
      - DB_PASSWORD=vendure
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      worker:
        condition: service_started
    networks:
      - bigi-network
    restart: unless-stopped

  # Vendure Worker
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    volumes:
      - vendure-data:/app/vendure
      - ./.env:/app/.env
    environment:
      - APP_ENV=prod
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=vendure
      - DB_USERNAME=vendure
      - DB_PASSWORD=vendure
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bigi-network
    restart: on-failure
    # Ensure the container doesn't exit immediately
    tty: true
    stdin_open: true

  # Angular Shop Frontend
  shop:
    build:
      context: .
      dockerfile: apps/shop/Dockerfile
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=production
      - PORT=4000
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bigi-network
    restart: unless-stopped

volumes:
  vendure-data: # Volume for persistent Vendure data (assets)
  postgres-data: # Volume for persistent PostgreSQL data
  email-data: # Volume for email storage

networks:
  bigi-network: # Network for services to communicate 